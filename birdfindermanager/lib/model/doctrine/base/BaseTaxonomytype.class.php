<?php

/**
 * BaseTaxonomytype
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $weight
 * @property Doctrine_Collection $Taxonomy
 * @property Doctrine_Collection $TaxonomytypeSource
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method integer             getWeight()             Returns the current record's "weight" value
 * @method Doctrine_Collection getTaxonomy()           Returns the current record's "Taxonomy" collection
 * @method Doctrine_Collection getTaxonomytypeSource() Returns the current record's "TaxonomytypeSource" collection
 * @method Taxonomytype        setId()                 Sets the current record's "id" value
 * @method Taxonomytype        setName()               Sets the current record's "name" value
 * @method Taxonomytype        setWeight()             Sets the current record's "weight" value
 * @method Taxonomytype        setTaxonomy()           Sets the current record's "Taxonomy" collection
 * @method Taxonomytype        setTaxonomytypeSource() Sets the current record's "TaxonomytypeSource" collection
 * 
 * @package    projectname
 * @subpackage model
 * @author     Joseph Persie
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaxonomytype extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('taxonomytype');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 72, array(
             'type' => 'string',
             'length' => 72,
             ));
        $this->hasColumn('weight', 'integer', null, array(
             'type' => 'integer',
             'notnull' => 'true default: 0',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Taxonomy', array(
             'local' => 'id',
             'foreign' => 'taxonomytype_id'));

        $this->hasMany('TaxonomytypeSource', array(
             'local' => 'id',
             'foreign' => 'taxonomytype_id'));
    }
}