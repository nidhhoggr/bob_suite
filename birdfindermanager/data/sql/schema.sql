CREATE TABLE audit_logger (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, module VARCHAR(96), action VARCHAR(96), object_id BIGINT, params LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bird (id BIGINT AUTO_INCREMENT, name VARCHAR(72), propername VARCHAR(72), imageurl TEXT, wikipedia text, about text, paraphrased TINYINT(1) DEFAULT '0' NOT NULL, drupalinfo text, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bird_source (id BIGINT AUTO_INCREMENT, bird_id BIGINT NOT NULL, source_id BIGINT NOT NULL, link TEXT, INDEX bird_id_idx (bird_id), INDEX source_id_idx (source_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bird_taxonomy (id BIGINT AUTO_INCREMENT, bird_id BIGINT NOT NULL, taxonomy_id BIGINT NOT NULL, INDEX bird_id_idx (bird_id), INDEX taxonomy_id_idx (taxonomy_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE source (id BIGINT AUTO_INCREMENT, name VARCHAR(72), link TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE taxonomy (id BIGINT AUTO_INCREMENT, taxonomytype_id BIGINT NOT NULL, name VARCHAR(72), imageurl TEXT, about text, drupalinfo text, described TINYINT(1) DEFAULT '0' NOT NULL, INDEX taxonomytype_id_idx (taxonomytype_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE taxonomy_source (id BIGINT AUTO_INCREMENT, taxonomy_id BIGINT NOT NULL, source_id BIGINT NOT NULL, INDEX taxonomy_id_idx (taxonomy_id), INDEX source_id_idx (source_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE taxonomytype (id BIGINT AUTO_INCREMENT, name VARCHAR(72), weight BIGINT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE taxonomytype_source (id BIGINT AUTO_INCREMENT, taxonomytype_id BIGINT NOT NULL, source_id BIGINT NOT NULL, INDEX taxonomytype_id_idx (taxonomytype_id), INDEX source_id_idx (source_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), middle_name VARCHAR(255), last_name VARCHAR(255), prefix VARCHAR(16), suffix VARCHAR(16), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, address_id BIGINT NOT NULL, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE audit_logger ADD CONSTRAINT audit_logger_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE bird_source ADD CONSTRAINT bird_source_source_id_source_id FOREIGN KEY (source_id) REFERENCES source(id);
ALTER TABLE bird_source ADD CONSTRAINT bird_source_bird_id_bird_id FOREIGN KEY (bird_id) REFERENCES bird(id);
ALTER TABLE bird_taxonomy ADD CONSTRAINT bird_taxonomy_taxonomy_id_taxonomy_id FOREIGN KEY (taxonomy_id) REFERENCES taxonomy(id);
ALTER TABLE bird_taxonomy ADD CONSTRAINT bird_taxonomy_bird_id_bird_id FOREIGN KEY (bird_id) REFERENCES bird(id);
ALTER TABLE taxonomy ADD CONSTRAINT taxonomy_taxonomytype_id_taxonomytype_id FOREIGN KEY (taxonomytype_id) REFERENCES taxonomytype(id);
ALTER TABLE taxonomy_source ADD CONSTRAINT taxonomy_source_taxonomy_id_taxonomy_id FOREIGN KEY (taxonomy_id) REFERENCES taxonomy(id);
ALTER TABLE taxonomy_source ADD CONSTRAINT taxonomy_source_source_id_source_id FOREIGN KEY (source_id) REFERENCES source(id);
ALTER TABLE taxonomytype_source ADD CONSTRAINT taxonomytype_source_taxonomytype_id_taxonomytype_id FOREIGN KEY (taxonomytype_id) REFERENCES taxonomytype(id);
ALTER TABLE taxonomytype_source ADD CONSTRAINT taxonomytype_source_source_id_source_id FOREIGN KEY (source_id) REFERENCES source(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
